INDEX







Session-1
Date: 27 Jan 25  

1. Installation and Setup of Android Studio  
- Download and install Android Studio.  

- Launch Android Studio and create a New Project.
- Select Empty View Activity.

- Choose Java as the language and Groovy Gradle for build configuration. 
- Complete the setup.

2. Changing Launcher Activity  
Option 1: Through GUI
- Check the Launcher Activity checkbox while creating a new Activity.  

Option 2: Through Manifest File  
- Open AndroidManifest.xml.  
- Move the intent-filter tag to the Activity you want as the launcher.  
  Example: Change from main_activity2 to main_activity.  
<activity
        	android:name=".MainActivity2"
        	android:exported="true">
        	<intent-filter>
            	<action android:name="android.intent.action.MAIN" />

            	<category android:name="android.intent.category.LAUNCHER" />
        	</intent-filter>
    	</activity>

3. Setting Up a New Emulator Device  


- Open Device Manager and click the + icon.  
- Select Create Virtual Device.  
- Choose a device (e.g., Pixel 9 Pro XL) and complete the setup.  

4. Changing Background Image  

- Save the image in the res > drawable folder.  
- Open the layout file (e.g., activity_main.xml).  
- Set the image as the background using:  
  android:background="@drawable/your_image_name"  

5. Changing Application Name  

- Open strings.xml in res > values.  
- Update the app_name string:  
  <string name="app_name">Your New App Name</string>  

6. Setting Up an Application Icon  



- Right-click the drawable folder and select New > Image Asset.  
- Customize the icon and save it.  

Session-2  
Date: 3 Feb 2025

1. Activity Lifecycle Overview  
The Android Activity lifecycle consists of a series of callback methods that are invoked as an Activity transitions through different states. The key lifecycle methods are:  
 

2. Generating Toast Messages for Lifecycle Methods  
To observe the Activity lifecycle in action, we can generate Toast messages or log statements in each lifecycle method.  
@Override
protected void onStart() {
   super.onStart();
   Log.d(event,"onStart() - activity started");
   Toast.makeText(this, "onStart", Toast.LENGTH_SHORT).show();

}
Steps:  
1. Open the MainActivity.java file.  
2. Override the lifecycle methods and add Toast messages or Log statements.  




3. Logcat for Debugging  
- Open Logcat in Android Studio to view the lifecycle logs.  
- Filter logs using the tag ActivityLifecycle to see only the relevant messages.
5.Adding a Button and TextView with ID
To add a Button and TextView to your layout:
6.Adding an OnClickListener to the Button
There are two ways to add an OnClickListener to the Button:
Option 1: Using Controller (Java/Kotlin Code)
Open the MainActivity.java file.
Add the following code to set an OnClickListener for the Button:
Button next = findViewById(R.id.button);
next.setOnClickListener(new View.OnClickListener() {
next.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Toast.makeText(MainActivity.this,"Working",Toast.LENGTH_SHORT).show();
   }
});


Option 2: Using XML and Method

In the activity_main.xml file, add the android:onClick attribute to the Button:

<Button android:id="@+id/button" android:layout_width="87dp" android:layout_height="61dp" android:text="Next" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintHorizontal_bias="0.082" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toTopOf="parent" app:layout_constraintVertical_bias="0.115" android:onClick="myMethod"/>

In the MainActivity.java file, add the corresponding method:

public void myMethod(View v){
   super.onStart();
   Toast.makeText(MainActivity.this,"Working with button",Toast.LENGTH_SHORT).show();
}





Session-3  
Date: 10 Feb 2025
1.Binding Button with Function Without Event Listener
Open your XML layout file (e.g., activity_main.xml).
Add a Button and set its android:onClick attribute to the function name you want to call.
code:
android:onClick="show"
Open your Java/Kotlin activity file (e.g., MainActivity.java).
Define the function inside your MainActivity class.
code:
private Button clickme;
private TextView output;

//inside oncreate we bind
output = findViewById(R.id.output);
clickme = findViewById(R.id.showActivity);

When the button is clicked, the function will execute without manually setting an event listener.

2.Adding EditText and showing its output when button is pressed
Steps:

Add an EditText and a Button in the layout file.
Retrieve the input from EditText when the button is pressed and display it (e.g., in a TextView).
output.setText(input);

3.Assignment make a program which takes 2 user input and operation and returns the value after operation
public void show(View view){
   String usermsg = message.getText().toString();
   StringBuilder out = new StringBuilder();
   int n1 = Integer.parseInt(num1.getText().toString());
   int n2 = Integer.parseInt(num2.getText().toString());
   Toast.makeText(getApplicationContext(),"button clicked",Toast.LENGTH_SHORT).show();
   if(usermsg.equalsIgnoreCase("sum")){
       out.append(n1+n2);
   } else if (usermsg.equalsIgnoreCase("sub")) {
       out.append(n1-n2);
   } else if (usermsg.equalsIgnoreCase("prod")) {
       out.append(n1*n2);
   } else if (usermsg.equalsIgnoreCase("divide")) {
       out.append(n1/n2);
   } else{
       out.append("Invalid input");
   }
   output.setText(usermsg+":"+out);

}



3.Changing Activity with Button

Steps:
Define a button in the layout file.
In the controller, use Intent to navigate to another activity when the button is clicked.





4.Passing values when changing intent


In Controller
next = findViewById(R.id.next);

next.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Intent nextActivity = new Intent(MainActivity.this, MainActivity2.class);
       startActivity(nextActivity);
   }
});
4.Adding google search function

Adding geo search


SESSION-4 								(12/02/2025)

Set Wallpaper and Dial

        phone = findViewById(R.id.phone);
        setWallpaperBtn = findViewById(R.id.setWallpaperBtn);
        callBtn = findViewById(R.id.callBtn);

        callBtn.setOnClickListener(view -> {
           Intent dial = new Intent(Intent.ACTION_DIAL);
           dial.setData(Uri.parse("tel:" + phone.getText().toString()));
           startActivity(dial);
        });

        setWallpaperBtn.setOnClickListener(view -> {
            Intent setWallpaper = new Intent(Intent.ACTION_SET_WALLPAPER);
            startActivity(Intent.createChooser(setWallpaper, "Select your wallpaper: "));
        });

          



     







	








Sending email:

    EditText recipientEmail, subject, emailBody, cc;
    ImageButton sendEmailBtn;

        recipientEmail = findViewById(R.id.recipientEmail);
        cc = findViewById(R.id.cc);
        subject = findViewById(R.id.subject);
        emailBody = findViewById(R.id.emailBody);
        sendEmailBtn = findViewById(R.id.sendEmailBtn);

        sendEmailBtn.setOnClickListener(view ->{
            Intent sendEmail = new Intent(Intent.ACTION_SEND);
            sendEmail.setType("message/rfc822");
            sendEmail.putExtra(Intent.EXTRA_EMAIL, new String[]{recipientEmail.getText().toString()});
            sendEmail.putExtra(Intent.EXTRA_CC, new String[]{cc.getText().toString()});
            sendEmail.putExtra(Intent.EXTRA_SUBJECT, subject.getText().toString());
            sendEmail.putExtra(Intent.EXTRA_TEXT, emailBody.getText().toString());

            startActivity(Intent.createChooser(sendEmail, "Select Email App: "));
        });



Creating Database
Device Explorer
data
data

com.example.mysqliteapplication



new class(Should be made where Main Activity is
extend with SqliteOpenHelper
Click on bulb
implement methods
and create constru


Create object of SQLite Database
create instance in main method


save the database file
then open in sqlite viewer


IN oncreate write the query
@Override
public void onCreate(SQLiteDatabase db) {
   db.execSQL("create table if not exists MCA(rollno integer PRIMARY KEY AUTOINCREMENT,email text,password text,usertype text)");
}

Run the app check if New FIle is created in device explorer
do sync first last option delete



Creating GUI

after creating gui make button call insert records which uses ContentValues to sqlitedatabase.insert()

MAIN ACTIVITY CODE:


package com.example.shaun10march;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {
   EditText rollno,email,password,utype;
   Button insert,showrecord;
   DatabaseHelper databaseHelper;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       rollno  = findViewById(R.id.rollno);
       email = findViewById(R.id.email);
       password = findViewById(R.id.password);
       utype = findViewById(R.id.utype);

       insert = findViewById(R.id.insert);
       showrecord = findViewById(R.id.insert);
       insert.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               if(!email.getText().toString().isEmpty() & !password.getText().toString().isEmpty() & !utype.getText().toString().isEmpty()){
                   boolean res = databaseHelper.insertRecord(email.getText().toString(),password.getText().toString(),utype.getText().toString());


                   if(res==true)
                       Toast.makeText(MainActivity.this,"Record inserted",Toast.LENGTH_SHORT).show();
                   else
                       Toast.makeText(MainActivity.this,"Query Syntax Error",Toast.LENGTH_SHORT).show();
               }else {
                   Toast.makeText(MainActivity.this,"InsertUserError-all fields are mandatory",Toast.LENGTH_LONG).show();
               }
           }
       });

       databaseHelper = new DatabaseHelper(this);
   }
}
DATABASE HELPER CODE



package com.example.shaun10march;

import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DatabaseHelper extends SQLiteOpenHelper {


   SQLiteDatabase sqLiteDatabase;
   public DatabaseHelper(@Nullable Context context) {
       super(context, "mca202426", null, 1);
       sqLiteDatabase = getWritableDatabase();
   }

   @Override
   public void onCreate(SQLiteDatabase db) {
       db.execSQL("create table if not exists MCA(rollno integer PRIMARY KEY AUTOINCREMENT,email text,password text,usertype text)");
   }

   @Override
   public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

   }

   public boolean insertRecord(String email, String password, String utype) {
       ContentValues cv = new ContentValues();
       cv.put("email",email);
       cv.put("password",password);
       cv.put("usertype",utype);
       long result = sqLiteDatabase.insert("MCA",null, cv);
       if(result==-1){
           return false;
       }else{
           return true;
       }
   }
}


CHECKING IF IT WORKS

Show Records
showrecord.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Cursor cursor = databaseHelper.showRecords();
       records = new StringBuilder();

       if(cursor.getCount()>0){

           while(cursor.moveToNext()){
               records.append("\n rollno:"+cursor.getString(0));
               records.append("\n email:"+cursor.getString(1));
               records.append("\n password:"+cursor.getString(2));
               records.append("\n userType"+cursor.getString(3));
               tv.setText(records);
           }
       }else{
           Toast.makeText(MainActivity.this, "No Records found!!",Toast.LENGTH_SHORT).show();
       }
   }
});


showRecords function
public Cursor showRecords() {
   Cursor cursor = sqLiteDatabase.rawQuery("Select * from MCA", null);
   if(cursor.getCount()>0)
       return cursor;
   else{
       return cursor;
   }
}


Mar 21, 2025
Session 6
Aim: Fetching records from database

Activity_main.xml: take plain text , button and textview for output

In MainActivity
search.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Cursor rec = databaseHelper.searchRecords(rollno.getText().toString());
       if(rec.getCount()<0)
           Toast.makeText(MainActivity.this,"Records not found !!!", Toast.LENGTH_SHORT).show();
       else{
           while (rec.moveToNext()){
               rollno.setText(rec.getString(0));
               email.setText(rec.getString(1));
               password.setText(rec.getString(2));
               utype.setText(rec.getString(3));
           }
       }
   }
});
In database helper
public Cursor searchRecords(String Roll) {
   sqLiteDatabase = getReadableDatabase();
   Cursor cursor = sqLiteDatabase.rawQuery("Select * from MCA where rollno="+Roll, null);
   if(cursor.getCount()>0)
       return cursor;
   else{
       return cursor;
   }
}



Update Records
update.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       if(!rollno.getText().toString().isEmpty() & !email.getText().toString().isEmpty() & !password.getText().toString().isEmpty() & !utype.getText().toString().isEmpty()){
           boolean result = databaseHelper.updateRecords(rollno.getText().toString(),email.getText().toString(),password.getText().toString(),utype.getText().toString());
           if(result){
               Toast.makeText(MainActivity.this,"Records Updated",Toast.LENGTH_SHORT).show();
           }else Toast.makeText(MainActivity.this,"Something went wrong",Toast.LENGTH_SHORT).show();
       }
   }
});

public boolean updateRecords(String Roll,String email,String password,String utype) {
   sqLiteDatabase = getReadableDatabase();
   ContentValues cv = new ContentValues();
   cv.put("email",email);
   cv.put("password",password);
   cv.put("usertype",utype);
   int cursor = sqLiteDatabase.update("MCA", cv,"rollno="+Roll,null);
   if(cursor >0)
       return true;
   else{
       return false;
   }
}
Clear button
clear.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       rollno.setText("");
       email.setText("");
       password.setText("");
       utype.setText("");
       tv.setText("");
   }
});
Delete Records


SESSION 7
Creating a Menu
Resource
First create new menu resource directory
by right clicking on res folder

Then Create a Resource file by right clicking menu folder



Adding Icons by making vector assets

<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto">
<item
   android:id="@+id/home"
   android:title="home"
   app:showAsAction="never"
   android:icon="@drawable/home"></item>
   <item
       android:id="@+id/profile"
       android:title="profile"
       app:showAsAction="never"
       android:icon="@drawable/profile"></item>
   <item
       android:id="@+id/downloads"
       android:title="downloads"
       app:showAsAction="never"
       android:icon="@drawable/download">
       <menu>
           <item
               android:id="@+id/images"
               android:title="images"
               app:showAsAction="never"></item>
           <item
               android:id="audio"
               android:title="audio"
               app:showAsAction="never"></item>
       </menu>
   </item>
   <item
       android:id="@+id/settings"
       android:title="settings"
       app:showAsAction="never"
       android:icon="@drawable/settings"></item>
</menu>

Making menu

package com.example.a21marchpart2;

import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.PopupMenu;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {

   Button menubutton;
   Toolbar toolbar;

   @Override
   public boolean onCreateOptionsMenu(Menu menu) {
       getMenuInflater().inflate(R.menu.popup_menu,menu);
       return true;
   }

   @Override
   public boolean onOptionsItemSelected(@NonNull MenuItem item) {
	Toast.makeText();
       return true;
   }

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       menubutton = findViewById(R.id.menubutton);
       toolbar = findViewById(R.id.toolbar);
       toolbar.setTitle(R.string.menu_name);
       setSupportActionBar(toolbar);



       menubutton.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               PopupMenu myMenu = new PopupMenu(MainActivity.this,menubutton);
               myMenu.getMenuInflater().inflate(R.menu.popup_menu,myMenu.getMenu());
               myMenu.show();

               myMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
                   @Override
                   public boolean onMenuItemClick(MenuItem item) {
                       //Toast.makeText(MainActivity.this,"you selected:"+item.getTitle(),Toast.LENGTH_SHORT).show();
                       switch (item.getTitle().toString()){
                           case "home":
                               Intent nextActivity = new Intent(MainActivity.this, MainActivity2.class);
                               startActivity(nextActivity);
                               break;
                           case "profile":
                               Toast.makeText(MainActivity.this,"Profile",Toast.LENGTH_SHORT).show();
                               Intent nextActivity1 = new Intent(MainActivity.this, MainActivity3.class);
                               startActivity(nextActivity1);
                               break;
                           case "downloads":
                               Toast.makeText(MainActivity.this,"Downloads",Toast.LENGTH_SHORT).show();
                               Intent nextActivity2 = new Intent(MainActivity.this, MainActivity4.class);
                               startActivity(nextActivity2);
                               break;
                           case "settings":
                               Toast.makeText(MainActivity.this,"Settings",Toast.LENGTH_SHORT).show();
                               Intent nextActivity3 = new Intent(MainActivity.this, MainActivity2.class);
                               startActivity(nextActivity3);
                               break;
                           default:
                               Toast.makeText(MainActivity.this,"download item",Toast.LENGTH_SHORT).show();
                               break;
                       }
                       return true;
                   }
               });
           }
       });
   }
}



24th March
SESSION 8

Context menu
bind 

tv = findViewById(R.id.tv);
registerForContextMenu(tv);

Methods Overriden
@Override
public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
   super.onCreateContextMenu(menu, v, menuInfo);
   getMenuInflater().inflate(R.menu.context_menu,menu);
}

@Override
public boolean onContextItemSelected(@NonNull MenuItem item) {
   Toast.makeText(MainActivity.this,"Item Selected",Toast.LENGTH_SHORT).show();
   return true;
}


SESSION 9
Form Controls
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:tools="http://schemas.android.com/tools"
   android:id="@+id/main"
   android:layout_width="match_parent"
   android:layout_height="match_parent"
   tools:context=".MainActivity2">

   <EditText
       android:id="@+id/name"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:ems="10"
       android:inputType="text"
       android:hint="Name"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.502"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.04" />



   <CheckBox
       android:id="@+id/SVU"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:text="SUV"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.542"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.13" />

   <CheckBox
       android:id="@+id/ayurvihar"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:text="Ayur"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.737"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.128" />

   <AutoCompleteTextView
       android:id="@+id/institute"
       android:layout_width="181dp"
       android:layout_height="48dp"
       android:hint="Your Institute"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.511"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.456" />

   <MultiAutoCompleteTextView
       android:id="@+id/city"
       android:layout_width="303dp"
       android:layout_height="54dp"
       android:hint="City"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.549" />

   <RadioGroup
       android:id="@+id/radioGroup"
       android:layout_width="198dp"
       android:layout_height="99dp"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.238">

       <RadioButton
           android:id="@+id/teaching"
           android:layout_width="match_parent"
           android:layout_height="34dp"
           android:text="teaching" />

       <RadioButton
           android:id="@+id/nonteaching"
           android:layout_width="match_parent"
           android:layout_height="33dp"
           android:text="nonteaching" />

       <RadioButton
           android:id="@+id/staff"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
           android:text="staff" />

   </RadioGroup>

   <EditText
       android:id="@+id/dob"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:ems="10"
       android:inputType="date"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.497"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.373" />

   <ScrollView
       android:id="@+id/scrollView2"
       android:layout_width="419dp"
       android:layout_height="174dp"
       android:layout_alignParentEnd="true"
       android:layout_alignParentBottom="true"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.0"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="1.0">

       <TextView
           android:id="@+id/output"
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
           android:hint="Output" />
   </ScrollView>

   <EditText
       android:id="@+id/comment"
       android:layout_width="301dp"
       android:layout_height="53dp"
       android:ems="10"
       android:hint="Comment"
       android:inputType="text"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.641" />

   <Button
       android:id="@+id/register"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:text="Register"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.498"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.73" />

   <TextView
       android:id="@+id/campus"
       android:layout_width="72dp"
       android:layout_height="41dp"
       android:text="Campus"
       app:layout_constraintBottom_toBottomOf="parent"
       app:layout_constraintEnd_toEndOf="parent"
       app:layout_constraintHorizontal_bias="0.235"
       app:layout_constraintStart_toStartOf="parent"
       app:layout_constraintTop_toTopOf="parent"
       app:layout_constraintVertical_bias="0.128" />


</androidx.constraintlayout.widget.ConstraintLayout>


Logic
package com.example.a24thmarchshaun;

import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.MultiAutoCompleteTextView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity2 extends AppCompatActivity {
   EditText name,dob,comment;
   CheckBox SVU,ayurvihar;
   RadioButton teaching,nonteaching,staff;
   AutoCompleteTextView institute;
   MultiAutoCompleteTextView city;
   TextView output,campus;
   Button register;
   StringBuilder details;
   RadioGroup radioGroup;
   RadioButton selected;


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main2);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       name = findViewById(R.id.name);
       dob = findViewById(R.id.dob);
       comment = findViewById(R.id.comment);
       SVU = findViewById(R.id.SVU);
       ayurvihar = findViewById(R.id.ayurvihar);
       teaching = findViewById(R.id.teaching);
       nonteaching = findViewById(R.id.nonteaching);
       staff = findViewById(R.id.staff);
       institute = findViewById(R.id.institute);
       city = findViewById(R.id.city);
       output = findViewById(R.id.output);
       campus = findViewById(R.id.campus);
       register = findViewById(R.id.register);
       radioGroup = findViewById(R.id.radioGroup);

       register.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               details = new StringBuilder();

               details.append("Registration Details: \n");
               details.append("Name:"+name.getText().toString());
               details.append("\n campus: ");

               if(SVU.isChecked()){
                   details.append(SVU.getText().toString());
               }else {
                   details.append(ayurvihar.getText().toString());
               }

               int selectedId = radioGroup.getCheckedRadioButtonId();
               selected = findViewById(selectedId);

               details.append("\n type of employee: "+selected.getText().toString());
               details.append("\n Institue:"+institute.getText().toString());
               details.append("\n City:"+city.getText().toString());
               details.append("\n comment:"+comment.getText().toString());


               output.setText(details);

           }
       });
       String insts[] = {
               "K J Somaiya institute of management",
               "K J Engineering",
               "K J school of designer",
               "K J medical college"};
       ArrayAdapter<String> adapter = new ArrayAdapter<>(this,androidx.appcompat.R.layout.support_simple_spinner_dropdown_item,insts);
       institute.setAdapter(adapter);
       institute.setThreshold(1);

       String city_list[] = {"mumbai","manglore","pune","Koachin","Chennai","patna"};

       ArrayAdapter<String> cityAdapter = new ArrayAdapter<>(this, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item,city_list);
       city.setAdapter(cityAdapter);
       city.setThreshold(2);
       city.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());
   }
}


28th March, 2025

ListView
package com.example.a24thmarchshaun;

import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity3 extends AppCompatActivity {
   ListView listView;
   Button showList;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main3);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       listView = findViewById(R.id.listView);
       showList = findViewById(R.id.showList);

       showList.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               String subject_list[] = {"Android","Machine Learning","R Programming","Advance java","Java","Software project Management"};

               ArrayAdapter<String> adapter = new ArrayAdapter<>(getApplication(), android.R.layout.simple_list_item_1,subject_list);
               listView.setAdapter(adapter);

               listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                   @Override
                   public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                       Toast.makeText(MainActivity3.this, "You Selected:"+subject_list[position], Toast.LENGTH_SHORT).show();
                   }
               });
           }
       });
   }
}


Spinner
showList.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       //spinner
       String NBA_teams[] = {"warriors","bucks","bulls","laykers","pistons","mavericks"};
       ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_spinner_dropdown_item,NBA_teams);
       spinner.setAdapter(spinnerAdapter);

       spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
           @Override
           public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
               Toast.makeText(MainActivity3.this, "Best team is:"+NBA_teams[position], Toast.LENGTH_SHORT).show();
           }

           @Override
           public void onNothingSelected(AdapterView<?> parent) {
               Toast.makeText(MainActivity3.this, "you cant jump", Toast.LENGTH_SHORT).show();
           }
       });

});

AlertBox (setSingle/MultipleChoiceItems)
alert.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       String elective_list[] = {"economics","natural language processing","human behavior","foreign language","performing arts"};
       electivesBuilder.setTitle("Select your elective");

       electivesBuilder.setSingleChoiceItems(elective_list, -1, new DialogInterface.OnClickListener() {
           @Override
           public void onClick(DialogInterface dialog, int which) {
               Toast.makeText(MainActivity3.this, "You Selected:"+elective_list[which], Toast.LENGTH_SHORT).show();
           }
       });
       electivesBuilder.setPositiveButton("close", new DialogInterface.OnClickListener() {
           @Override
           public void onClick(DialogInterface dialog, int which) {
               dialog.dismiss();
           }
       });
       electivesBuilder.create();
       electivesBuilder.show();
   }
});


Assignment
All 3 in one button



Localization(Part 1)

First open Translation editor


Then add Locale
then set their values in the string.xml(hi)
<?xml version="1.0" encoding="utf-8"?>
<resources>
   <string name="app_name">Shaun28thMarch</string>
   <string name="email" translatable="false">ईमेल दर्ज करें: abc@somaiya</string>
   <string name="change_language">भाषा बदलने के लिए यहाँ क्लिक करें</string>
   <string name="password">पासवर्ड दर्ज करें:</string>
   <string name="login">लॉगिन करने के लिए यहाँ क्लिक करें</string>
   <string name="welcome">इस ऐप में बहुभाषी समर्थन है</string>
</resources>

then Create a alertBox with the options
{
           String languages[] = {"English","اردو","ગુજરાતી","हिन्दी","कोंकणी"};

           alert.setSingleChoiceItems(languages, -1, new DialogInterface.OnClickListener() {
               @Override
               public void onClick(DialogInterface dialog, int i) {

                   String lang = languages[i];

                   if(lang=="English"){
                       setLocale("en");
                       recreate();
                   } else  if (lang == "اردو"){
//                        Toast.makeText(MainActivity.this, "You Selected "+lang, Toast.LENGTH_SHORT).show();
                       setLocale("ur");
                       recreate();
                   }else if(lang=="ગુજરાતી"){
//                        Toast.makeText(MainActivity.this, "You Selected "+lang, Toast.LENGTH_SHORT).show();
                       setLocale("gu");
                       recreate();
                   }else if(lang == "हिन्दी"){
//                        Toast.makeText(MainActivity.this, "You Selected "+lang, Toast.LENGTH_SHORT).show();
                       setLocale("hi");
                       recreate();
                   }else if(lang == "कोंकणी"){
                       setLocale("b+kok");
                       recreate();
                   }

               }
           });

           alert.setNegativeButton("Close", new DialogInterface.OnClickListener() {
               @Override
               public void onClick(DialogInterface dialog, int which) {
                   dialog.dismiss();
               }
           });
           alert.create();
           alert.show();
       });

SESSION 10
CHANGING LOCALE CODE (LOCALIZATION PART 2)
public void setLocale(String lang){


   Locale locale = new Locale(lang);
   Configuration configuration = new Configuration();
   configuration.setLocale(locale);


   //Changing Configuration with configuration with set locale
   getBaseContext().getResources().updateConfiguration(configuration,getResources().getDisplayMetrics());


   //with out shared preferences only for activity not entire app
   SharedPreferences.Editor editor = getSharedPreferences("Settings",MODE_PRIVATE).edit();
   editor.putString("Language",lang);
   editor.apply();
}
public void loadLocale(){
   SharedPreferences sharedPreferences = getSharedPreferences("Settings",MODE_PRIVATE);
   String lang = sharedPreferences.getString("Language","");
   setLocale(lang);
}
ALSO LOAD LOCALE SHOULD BE ADDED FIRST IN ONCREATE TO LOAD WITH A DIFFERENT LANGUAGE


OUTPUT


4th April Firebase
STEP 1

STEP 2 

Real time database 1st option
then create new project

DO NEXT STEP AND ACCEPT CHANGES



After checking google services
go in firebase console and check build-Realtime database

Create Database


Copy 3 line

Paste after onCreate

Add semicolons


SESSION 11
7th April Firebase
click on authenticate then
Authenticate using google java
then on website pick Email/Password


then add sign in method using email and password

Code of application
First create Global Firebase Variable
register.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       firebaseAuth.createUserWithEmailAndPassword(email.getText().toString(),password.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
           @Override
           public void onComplete(@NonNull Task<AuthResult> task) {
               if (task.isSuccessful()){
                   Toast.makeText(MainActivity.this, "User Created", Toast.LENGTH_SHORT).show();
                   result.setText("User Created");
               }else {
                   result.setText("User Creating unsuccessful");
               }
           }
       });
   }
});
login.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       firebaseAuth.signInWithEmailAndPassword(email.getText().toString(),password.getText().toString())
               .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                   @Override
                   public void onComplete(@NonNull Task<AuthResult> task) {
                       if (task.isSuccessful()){
                           Toast.makeText(MainActivity.this, "Login Success", Toast.LENGTH_SHORT).show();
                           Intent nextActi = new Intent(MainActivity.this, MainActivity2.class);
                           startActivity(nextActi);
                       }else {
                           result.setText("Sign in unsuccessful");
                       }
                   }
               });
   }
});


Inserting Data After Login

package com.example.a7thaprilfirebase;

import android.os.Bundle;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.HashMap;

public class MainActivity2 extends AppCompatActivity {
   FirebaseAuth firebaseAuth;
   FirebaseDatabase firebaseDatabase;
   DatabaseReference databaseReference;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main2);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       firebaseAuth = FirebaseAuth.getInstance();

       firebaseDatabase = FirebaseDatabase.getInstance();
       databaseReference = firebaseDatabase.getReference("KJSIM");

       HashMap<String,Object> employee = new HashMap<>();
       employee.put("empid","10001");
       employee.put("email","mca@somaiya.edu");
       employee.put("name","MCA Batch 2024-26");
       employee.put("institute","KJ Somaiya Institute of Management");
       databaseReference.child("10001").setValue(employee).addOnCompleteListener(new OnCompleteListener<Void>() {
           @Override
           public void onComplete(@NonNull Task<Void> task) {
               if (task.isSuccessful()){
                   Toast.makeText(MainActivity2.this, "Records Inserted", Toast.LENGTH_SHORT).show();
               }else {
                   Toast.makeText(MainActivity2.this, "Insert Unsuccessful", Toast.LENGTH_SHORT).show();
               }
           }
       });
   }
}


Adding Records
ADDED USING A POJO CLASS OBJECT
package com.example.a7thaprilfirebase;

import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.HashMap;

public class MainActivity2 extends AppCompatActivity {
   EditText empid,empmail,empinstitute,empname;
   Spinner spinner;
   TextView results;
   Button add,show;
   Employee employee;
   FirebaseAuth firebaseAuth;
   FirebaseDatabase firebaseDatabase;
   DatabaseReference databaseReference;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main2);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });

       empid = findViewById(R.id.empid);
       empname = findViewById(R.id.empname);
       empinstitute = findViewById(R.id.empinstitute);
       empmail = findViewById(R.id.empmail);
       spinner = findViewById(R.id.spinner);
       results = findViewById(R.id.results);
       add = findViewById(R.id.add);
       show = findViewById(R.id.show);

       firebaseAuth = FirebaseAuth.getInstance();

       firebaseDatabase = FirebaseDatabase.getInstance();
       databaseReference = firebaseDatabase.getReference("KJSIM");

       String courses[] = {"MCA","MBA","MBA WE","MBA PT","MTECH"};
       ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_spinner_dropdown_item,courses);
       spinner.setAdapter(spinnerAdapter);




       add.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               employee = new Employee(empid.getText().toString(),empname.getText().toString(),empmail.getText().toString(),empinstitute.getText().toString(),spinner.getSelectedItem().toString());
               firebaseDatabase = FirebaseDatabase.getInstance();
               databaseReference = firebaseDatabase.getReference("KJSIM");

               databaseReference.child(empid.getText().toString()).setValue(employee).addOnCompleteListener(new OnCompleteListener<Void>() {
                   @Override
                   public void onComplete(@NonNull Task<Void> task) {
                       if (task.isSuccessful()){
                           Toast.makeText(MainActivity2.this, "Records Inserted", Toast.LENGTH_SHORT).show();
                       }else {
                           Toast.makeText(MainActivity2.this, "Insert Unsuccessful", Toast.LENGTH_SHORT).show();
                       }
                   }
               });
           }
       });




//        add.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                HashMap<String,Object> employee = new HashMap<>();
//                employee.put("empid",empid.getText().toString());
//                employee.put("name",empname.getText().toString());
//                employee.put("email",empmail.getText().toString());
//                employee.put("institute",empinstitute.getText().toString());
//                employee.put("course",spinner.getSelectedItem().toString());
//
//                databaseReference.child("10001").setValue(employee).addOnCompleteListener(new OnCompleteListener<Void>() {
//                    @Override
//                    public void onComplete(@NonNull Task<Void> task) {
//                        if (task.isSuccessful()){
//                            Toast.makeText(MainActivity2.this, "Records Inserted", Toast.LENGTH_SHORT).show();
//                        }else {
//                            Toast.makeText(MainActivity2.this, "Insert Unsuccessful", Toast.LENGTH_SHORT).show();
//                        }
//                    }
//                });
//            }
//        });
   }
}
POJO CLASS
package com.example.a7thaprilfirebase;

public class Employee {
   public String empid; //must be public
   public String name;
   public String email;
   public String course;
   public String institute;
   public Employee(){}//must create a default constructor or will cause exception

   public Employee(String empid, String name, String email, String course, String institute) {
       this.empid = empid;
       this.name = name;
       this.email = email;
       this.course = course;
       this.institute = institute;
   }

   public String getEmpid() {
       return empid;
   }

   public String getName() {
       return name;
   }

   public String getEmail() {
       return email;
   }

   public String getCourse() {
       return course;
   }

   public String getInstitute() {
       return institute;
   }
}


SESSION 12
19th April 
Firebase CRUD(read)
show.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       if(databaseReference==null){
           Toast.makeText(MainActivity2.this, "Select Parent Node", Toast.LENGTH_SHORT).show();
       }else {
           databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
               @Override
               public void onDataChange(@NonNull DataSnapshot snapshot) {
                   StringBuilder allStudents = new StringBuilder();
                   for(DataSnapshot snap: snapshot.getChildren()){
                       Student stu = snap.getValue(Student.class);
                       allStudents.append(stu.toString()).append("\n\n");
                   }
                   alertDialog.setTitle("Student Records");
                   alertDialog.setMessage(allStudents.toString());
                   alertDialog.setNegativeButton("close", new DialogInterface.OnClickListener() {
                       @Override
                       public void onClick(DialogInterface dialog, int which) {
                           dialog.dismiss();
                       }
                   });
                   alertDialog.show();
               }

               @Override
               public void onCancelled(@NonNull DatabaseError error) {
                   Toast.makeText(MainActivity2.this, "Failed to load data", Toast.LENGTH_SHORT).show();
               }
           });
       }
   }
});
HOMEWORK

Spinner that changes parent node
package com.example.firebaserevision;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class MainActivity2 extends AppCompatActivity {
   EditText name,roll;
   Button add,show;
   Spinner spinner,spinner2;
   AlertDialog.Builder alertDialog;
   FirebaseDatabase database;
   FirebaseAuth firebaseAuth;
   DatabaseReference databaseReference;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main2);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       name = findViewById(R.id.name);
       roll = findViewById(R.id.roll);
       add = findViewById(R.id.add);
       spinner = findViewById(R.id.spinner);
       String courses[] = {"MCA","MBA","MTECH","BTECH","BSCIT"};
       ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_dropdown_item_1line,courses);
       spinner.setAdapter(spinnerAdapter);
       show = findViewById(R.id.show);
       alertDialog = new AlertDialog.Builder(this);

       database = FirebaseDatabase.getInstance();
       spinner2 = findViewById(R.id.spinner2);
       String parentnodes[] = {"SVU","AYUR","KJSIM"};
       ArrayAdapter<String> parentSpinner = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_dropdown_item_1line,parentnodes);
       spinner2.setAdapter(parentSpinner);
       spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
           @Override
           public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
               String selectedItem = parentnodes[position];
               databaseReference = database.getReference(selectedItem);
           }

           @Override
           public void onNothingSelected(AdapterView<?> parent) {

           }
       });
       add.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               if(databaseReference==null){
                   Toast.makeText(MainActivity2.this, "Select Parent Node", Toast.LENGTH_SHORT).show();
               }else{
                   Student stu = new Student();
                   stu.setName(name.getText().toString());
                   stu.setRoll(Integer.parseInt(roll.getText().toString()));
                   stu.setCourse(spinner.getSelectedItem().toString());

                   databaseReference.push().setValue(stu).addOnCompleteListener(new OnCompleteListener<Void>() {
                       @Override
                       public void onComplete(@NonNull Task<Void> task) {
                           if (task.isSuccessful()){
                               Toast.makeText(MainActivity2.this, "Data Inserted", Toast.LENGTH_SHORT).show();
                           }else {
                               Toast.makeText(MainActivity2.this, "Something went Wrong", Toast.LENGTH_SHORT).show();
                           }
                       }
                   });
               }

           }
       });
       show.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               if(databaseReference==null){
                   Toast.makeText(MainActivity2.this, "Select Parent Node", Toast.LENGTH_SHORT).show();
               }else {
                   databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                       @Override
                       public void onDataChange(@NonNull DataSnapshot snapshot) {
                           StringBuilder allStudents = new StringBuilder();
                           for(DataSnapshot snap: snapshot.getChildren()){
                               Student stu = snap.getValue(Student.class);
                               allStudents.append(stu.toString()).append("\n\n");
                           }
                           alertDialog.setTitle("Student Records");
                           alertDialog.setMessage(allStudents.toString());
                           alertDialog.setNegativeButton("close", new DialogInterface.OnClickListener() {
                               @Override
                               public void onClick(DialogInterface dialog, int which) {
                                   dialog.dismiss();
                               }
                           });
                           alertDialog.show();
                       }

                       @Override
                       public void onCancelled(@NonNull DatabaseError error) {
                           Toast.makeText(MainActivity2.this, "Failed to load data", Toast.LENGTH_SHORT).show();
                       }
                   });
               }
           }
       });
   }
}


SESSION 13
21 April 2025
DELETE AND Update
Delete
delete.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Query query = databaseReference.orderByChild("name").equalTo(name.getText().toString());
       query.addListenerForSingleValueEvent(new ValueEventListener() {
           @Override
           public void onDataChange(@NonNull DataSnapshot snapshot) {
               for(DataSnapshot snap: snapshot.getChildren()){
                   snap.getRef().removeValue();
               }
           }

           @Override
           public void onCancelled(@NonNull DatabaseError error) {
               Toast.makeText(MainActivity.this, "Something went wrong", Toast.LENGTH_SHORT).show();
           }
       });
   }
});


UPDATE
update.setOnClickListener(new View.OnClickListener() {
   @Override
   public void onClick(View v) {
       Query query = databaseReference.orderByChild("name").equalTo(name.getText().toString());
       query.addListenerForSingleValueEvent(new ValueEventListener() {
           @Override
           public void onDataChange(@NonNull DataSnapshot snapshot) {
               for(DataSnapshot snap: snapshot.getChildren()){
                   snap.getRef().child("course").setValue(course.getText().toString());
                   snap.getRef().child("roll").setValue(Integer.parseInt(roll.getText().toString()));
               }
           }

           @Override
           public void onCancelled(@NonNull DatabaseError error) {
               Toast.makeText(MainActivity.this, "Something went wrong", Toast.LENGTH_SHORT).show();
           }
       });
   }
});


SESSION 14
package com.example.firebaserevision;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class MainActivity extends AppCompatActivity {
   FirebaseAuth firebaseAuth;
   FirebaseDatabase database;
   DatabaseReference reference;
   EditText email,password;
   Button login,sign;

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       database = FirebaseDatabase.getInstance();
       reference = database.getReference();
       firebaseAuth = FirebaseAuth.getInstance();

       email = findViewById(R.id.email);
       password = findViewById(R.id.password);
       login = findViewById(R.id.login);
       sign = findViewById(R.id.sign);

       sign.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               firebaseAuth.createUserWithEmailAndPassword(email.getText().toString(),password.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                   @Override
                   public void onComplete(@NonNull Task<AuthResult> task) {
                       if(task.isSuccessful()){
                           Toast.makeText(MainActivity.this, "Account Created", Toast.LENGTH_SHORT).show();
                       }else {
                           Toast.makeText(MainActivity.this, "Something went wrong",Toast.LENGTH_SHORT).show();
                       }
                   }
               });
           }
       });
       login.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               firebaseAuth.signInWithEmailAndPassword(email.getText().toString(),password.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                   @Override
                   public void onComplete(@NonNull Task<AuthResult> task) {
                       if (task.isSuccessful()){
                           Intent nextintent = new Intent(MainActivity.this, MainActivity2.class);
                           startActivity(nextintent);
                       }else {
                           Toast.makeText(MainActivity.this, "Incorrect Credentials", Toast.LENGTH_SHORT).show();
                       }
                   }
               });
           }
       });

   }
}
package com.example.firebaserevision;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class MainActivity2 extends AppCompatActivity {
   EditText name,roll;
   Button add,show;
   Spinner spinner,spinner2;
   AlertDialog.Builder alertDialog;
   FirebaseDatabase database;
   FirebaseAuth firebaseAuth;
   DatabaseReference databaseReference;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main2);
       ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
           Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
           v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
           return insets;
       });
       name = findViewById(R.id.name);
       roll = findViewById(R.id.roll);
       add = findViewById(R.id.add);
       spinner = findViewById(R.id.spinner);
       String courses[] = {"MCA","MBA","MTECH","BTECH","BSCIT"};
       ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_dropdown_item_1line,courses);
       spinner.setAdapter(spinnerAdapter);
       show = findViewById(R.id.show);
       alertDialog = new AlertDialog.Builder(this);

       database = FirebaseDatabase.getInstance();
       spinner2 = findViewById(R.id.spinner2);
       String parentnodes[] = {"SVU","AYUR","KJSIM"};
       ArrayAdapter<String> parentSpinner = new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_dropdown_item_1line,parentnodes);
       spinner2.setAdapter(parentSpinner);
       spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
           @Override
           public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
               String selectedItem = parentnodes[position];
               databaseReference = database.getReference(selectedItem);
           }

           @Override
           public void onNothingSelected(AdapterView<?> parent) {

           }
       });
       add.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               if(databaseReference==null){
                   Toast.makeText(MainActivity2.this, "Select Parent Node", Toast.LENGTH_SHORT).show();
               }else{
                   Student stu = new Student();
                   stu.setName(name.getText().toString());
                   stu.setRoll(Integer.parseInt(roll.getText().toString()));
                   stu.setCourse(spinner.getSelectedItem().toString());

                   databaseReference.push().setValue(stu).addOnCompleteListener(new OnCompleteListener<Void>() {
                       @Override
                       public void onComplete(@NonNull Task<Void> task) {
                           if (task.isSuccessful()){
                               Toast.makeText(MainActivity2.this, "Data Inserted", Toast.LENGTH_SHORT).show();
                           }else {
                               Toast.makeText(MainActivity2.this, "Something went Wrong", Toast.LENGTH_SHORT).show();
                           }
                       }
                   });
               }

           }
       });
       show.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               if(databaseReference==null){
                   Toast.makeText(MainActivity2.this, "Select Parent Node", Toast.LENGTH_SHORT).show();
               }else {
                   databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                       @Override
                       public void onDataChange(@NonNull DataSnapshot snapshot) {
                           StringBuilder allStudents = new StringBuilder();
                           for(DataSnapshot snap: snapshot.getChildren()){
                               Student stu = snap.getValue(Student.class);
                               allStudents.append(stu.toString()).append("\n\n");
                           }
                           alertDialog.setTitle("Student Records");
                           alertDialog.setMessage(allStudents.toString());
                           alertDialog.setNegativeButton("close", new DialogInterface.OnClickListener() {
                               @Override
                               public void onClick(DialogInterface dialog, int which) {
                                   dialog.dismiss();
                               }
                           });
                           alertDialog.show();
                       }

                       @Override
                       public void onCancelled(@NonNull DatabaseError error) {
                           Toast.makeText(MainActivity2.this, "Failed to load data", Toast.LENGTH_SHORT).show();
                       }
                   });
               }
           }
       });
   }


SESSION 15
28th April Recycle view
FIRST ADD DEPENDENCY
implementation 'androidx.recyclerview:recyclerview:1.4.0' 
package com.example.a28thaprilclass;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

	RecyclerView recyclerView;
	FirebaseDatabase database;
	DatabaseReference databaseReference;
	MyAdapter myAdapter;
	ArrayList<Employee> employeeArrayList;
	Button button;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
    	super.onCreate(savedInstanceState);
    	EdgeToEdge.enable(this);
    	setContentView(R.layout.activity_main);
    	ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
        	Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
        	v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
        	return insets;
    	});
    	recyclerView = findViewById(R.id.recyclerview);
    	button = findViewById(R.id.button);
    	database = FirebaseDatabase.getInstance();
    	databaseReference = database.getReference("Employee");

    	recyclerView.setLayoutManager(new LinearLayoutManager(this));

    	employeeArrayList = new ArrayList<>();
    	myAdapter = new MyAdapter(getApplicationContext(),employeeArrayList);
    	recyclerView.setAdapter(myAdapter);

    	button.setOnClickListener(new View.OnClickListener() {
        	@Override
        	public void onClick(View v) {
            	Employee emp = new Employee("42","Shaun Rodrigues","shaun.r@somaiya.edu","MCA","KJSIM","https://unsplash.com/s/photos/profile");
            	databaseReference.push().setValue(emp).addOnCompleteListener(new OnCompleteListener<Void>() {
                	@Override
                	public void onComplete(@NonNull Task<Void> task) {
                    	if (task.isSuccessful()){
                        	Toast.makeText(MainActivity.this, "Added Successfully", Toast.LENGTH_SHORT).show();
                    	}
                	}
            	});
        	}
    	});


    	databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
        	@Override
        	public void onDataChange(@NonNull DataSnapshot snapshot) {
            	for (DataSnapshot snap :snapshot.getChildren()){
                	Employee employee = snap.getValue(Employee.class);
                	employeeArrayList.add(employee);
            	}
            	myAdapter.notifyDataSetChanged();
        	}

        	@Override
        	public void onCancelled(@NonNull DatabaseError error) {

        	}
	    });

    }
}

package com.example.a28thaprilclass;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

import coil.Coil;
import coil.ImageLoader;
import coil.request.ImageRequest;

public class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder> {
	Context context;
	ArrayList<Employee> employeeArrayList;

	public MyAdapter(Context context, ArrayList<Employee> employeeArrayList) {
    	this.context = context;
    	this.employeeArrayList = employeeArrayList;
	}

	@NonNull
	@Override
	public MyAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
    	//Creates view but do not populate data
    	View view = LayoutInflater.from(context).inflate(R.layout.employees_layout,parent,false);

    	return new ViewHolder(view);
	}

	@Override
	public void onBindViewHolder(@NonNull MyAdapter.ViewHolder holder, int position) {
    	//it binds the view with holder object
    	Employee employee = employeeArrayList.get(position);

    	holder.empidtv.setText(employee.getEmpid());
    	holder.nametv.setText(employee.getName());
    	holder.emailtv.setText(employee.getEmail());
    	holder.coursetv.setText(employee.getCourse());
    	holder.institutetv.setText(employee.getInstitute());
    	ImageLoader imageLoader = Coil.imageLoader(context);
    	ImageRequest request = new ImageRequest.Builder(context)
            	.data(employee.getImageURL())
            	.target(holder.image)
            	.placeholder(R.drawable.ic_launcher_foreground)
            	.error(R.drawable.ic_launcher_background)
            	.build();
    	imageLoader.enqueue(request);


	}

	@Override
	public int getItemCount() {
    	//tells the recyclerview how many items to be shown
    	Log.d("employeeArrayList.size()","Created successfully");
    	return employeeArrayList.size();
	}

	public static class ViewHolder extends RecyclerView.ViewHolder {

    	TextView empidtv,nametv,emailtv,coursetv,institutetv;
    	ImageView image;

    	public ViewHolder(@NonNull View itemView) {
        	super(itemView);
        	empidtv = itemView.findViewById(R.id.empidtv);
        	nametv = itemView.findViewById(R.id.nametv);
        	emailtv = itemView.findViewById(R.id.emailtv);
        	coursetv = itemView.findViewById(R.id.coursetv);
        	institutetv = itemView.findViewById(R.id.institutetv);
        	image = itemView.findViewById(R.id.image);
        }
    }
}
package com.example.a28thaprilclass;

import android.net.Uri;

public class Employee {
	String empid;
	String name;
	String email;
	String course;
	String institute;
	String imageURL;

	public Employee() {
	}

	public Employee(String empid, String name, String email, String course, String institute,String imageURL) {
    	this.empid = empid;
    	this.name = name;
    	this.email = email;
    	this.course = course;
    	this.institute = institute;
    	this.imageURL = imageURL;
	}

	public String getEmpid() {
    	return empid;
	}

	public String getName() {
    	return name;
	}

	public String getEmail() {
    	return email;
	}

	public String getCourse() {
    	return course;
	}

	public String getInstitute() {
    	return institute;
	}

	public String getImageURL() {
    	return imageURL;
    }
}

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:orientation="vertical">

	<TextView
    	android:id="@+id/empidtv"
    	android:layout_width="match_parent"
    	android:layout_height="73dp"
    	android:hint="Employee ID" />
	<TextView
    	android:id="@+id/nametv"
    	android:layout_width="match_parent"
    	android:layout_height="73dp"
    	android:hint="Name" />
	<TextView
    	android:id="@+id/emailtv"
    	android:layout_width="match_parent"
    	android:layout_height="73dp"
    	android:hint="Email" />
	<TextView
    	android:id="@+id/coursetv"
    	android:layout_width="match_parent"
    	android:layout_height="73dp"
    	android:hint="Course" />
	<TextView
    	android:id="@+id/institutetv"
    	android:layout_width="match_parent"
    	android:layout_height="73dp"
    	android:hint="Institute" />
	<ImageView
    	android:id="@+id/image"
    	android:layout_width="wrap_content"
    	android:layout_height="wrap_content"
    	android:contentDescription="user profile photo" />

</LinearLayout>

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:id="@+id/main"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity">

	<androidx.recyclerview.widget.RecyclerView
    	android:id="@+id/recyclerview"
    	android:layout_width="266dp"
    	android:layout_height="315dp"
    	app:layout_constraintBottom_toBottomOf="parent"
    	app:layout_constraintEnd_toEndOf="parent"
    	app:layout_constraintHorizontal_bias="0.255"
    	app:layout_constraintStart_toStartOf="parent"
    	app:layout_constraintTop_toTopOf="parent"
    	app:layout_constraintVertical_bias="0.091" />

	<Button
    	android:id="@+id/button"
    	android:layout_width="wrap_content"
    	android:layout_height="wrap_content"
    	android:text="Add Value"
    	app:layout_constraintBottom_toBottomOf="parent"
    	app:layout_constraintEnd_toEndOf="parent"
    	app:layout_constraintHorizontal_bias="0.498"
    	app:layout_constraintStart_toStartOf="parent"
    	app:layout_constraintTop_toTopOf="parent"
    	app:layout_constraintVertical_bias="0.723" />

</androidx.constraintlayout.widget.ConstraintLayout>





